框架事务处理配置
1、在hibernate.cfg.xml中移除下行
<!-- Enable Hibernate's automatic session context management -->
<property name="current_session_context_class">thread</property>
2、在applicationContext.xml中确保有如下配置
	 <!--配置事务传播特性-->
	<tx:advice id="TestAdvice" transaction-manager="transactionManager">
    	<tx:attributes>
    	  	<tx:method name="tx*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
    	  	<tx:method name="query*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
    	  	<tx:method name="get*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
    	</tx:attributes>
	</tx:advice>
3、编写restful服务时，遵循如下命名规则
	如果要让spring来管理事务，服务名要以
	get、query、tx开头
	如果不用spring来管理事务，服务名要以
	xt开头(tx的颠倒写法）
4、在银光端保存数据时，把需要在一次性都要成功完成（事务）的工作全部放在BatchExcuteAction中，否则，不能保证。
对象过于陈旧错误捕获和设置
有如下场景，打开一个窗口进行用户数据修改，打开另一个窗口对同一用户进行停用操作。如果先进行了停用，则不应该再对该用户进行修改。
为了对陈旧对象进行操作，需要捕获该错误。
1、设置：
在hibernate配置文件.hbm.xml中，配置
		<version name="version"></version>
注意，该配置必须紧跟在
		<id name="id" type="int">
		</id>
配置的后面。
2、执行sql语句，更改该配置对应的数据库表中的version字段为0。
3、在银光系统中监听BatchExcuteAction的错误状态。例
        <c:MessageTipObj Tip="{m:Exp  Str=$错误内容：\{SaveAction.Error\=\=null:$$\,SaveAction.Error\}$}" IsShow="{m:Exp Str=SaveAction.State\=\=$Error}"/>
并进行界面恢复工作。

